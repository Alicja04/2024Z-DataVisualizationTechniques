summarise(ilosc = n()) %>%
arrange(ilosc) %>%
top_n( as.integer(round(df %>% distinct(zipcode) %>% count() / 20,0) ))
df_a
df_a <- df %>%
group_by(zipcode) %>%
summarise(ilosc = n()) %>%
arrange(ilosc) %>%
top_n( as.integer(round(df %>% distinct(zipcode) %>% count() / 20,0) )) %>%
left_join(df, by = c("zipcode", "zipcode")) %>%
filter(grade == 8 | grade == 9) %>%
df_a
df_a <- df %>%
group_by(zipcode) %>%
summarise(ilosc = n()) %>%
arrange(ilosc) %>%
top_n( as.integer(round(df %>% distinct(zipcode) %>% count() / 20,0) )) %>%
left_join(df, by = c("zipcode", "zipcode")) %>%
filter(grade == 8 | grade == 9) %>%
mutate(year = substr(date, 1, 4)) %>%
ggplot(aes(x = zipcode, y = price/1000)) +
facet_grid(rows = grade, cols = year) +
boxplot()
df_a <- df %>%
group_by(zipcode) %>%
summarise(ilosc = n()) %>%
arrange(ilosc) %>%
top_n( as.integer(round(df %>% distinct(zipcode) %>% count() / 20,0) )) %>%
inner_join(df, by = c("zipcode", "zipcode")) %>%
filter(grade == 8 | grade == 9) %>%
mutate(year = substr(date, 1, 4)) %>%
ggplot(aes(x = zipcode, y = price/1000)) +
facet_grid(rows = grade, cols = year) +
boxplot()
df_a
df_b <- df %>%
filter(zipcode %in% df_a$zipcode) %>%
filter(grade == 8 | grade == 9) %>%
mutate(year = substr(date, 1, 4)) %>%
ggplot(aes(x = zipcode, y = price/1000)) +
facet_grid(rows = grade, cols = year) +
boxplot()
df_a
df_b
df_b <- df %>%
filter(zipcode %in% df_a$zipcode) %>%
filter(grade == 8 | grade == 9) %>%
mutate(year = substr(date, 1, 4)) %>%
ggplot(aes(x = zipcode, y = price/1000)) +
facet_grid(rows = grade, cols = year) +
boxplot()
df_b <- df %>%
filter(zipcode %in% df_a$zipcode) %>%
filter(grade == 8 | grade == 9) %>%
filter(yr_built == 2013 | yr_built == 2014) %>%
ggplot(aes(x = zipcode, y = price/1000)) +
facet_grid(rows = grade, cols = yr_built) +
boxplot()
df_b
df_b <- df %>%
filter(zipcode %in% df_a$zipcode) %>%
filter(grade == 8 | grade == 9) %>%
filter(yr_built == 2013 | yr_built == 2014) %>%
ggplot(aes(x = zipcode, y = price/1000)) +
facet_grid(grade~yr_built) +
boxplot()
df_b
df_b <- df %>%
filter(zipcode %in% df_a$zipcode) %>%
filter(grade == 8 | grade == 9) %>%
filter(yr_built == 2013 | yr_built == 2014) %>%
ggplot(aes(x = factor(zipcode), y = price/1000)) +
facet_grid(grade~yr_built) +
boxplot()
df_b
df_b <- df %>%
filter(zipcode %in% df_a$zipcode) %>%
filter(grade == 8 | grade == 9) %>%
filter(yr_built == 2013 | yr_built == 2014) %>%
ggplot(aes(x = factor(zipcode), y = price/1000)) +
facet_grid(grade~yr_built) +
boxplot()
df_b <- df %>%
filter(zipcode %in% df_a$zipcode) %>%
filter(grade == 8 | grade == 9) %>%
filter(yr_built == 2013 | yr_built == 2014)
df_b
df_b <- df %>%
filter(zipcode %in% df_a$zipcode) %>%
filter(grade == 8 | grade == 9) %>%
filter(yr_built == 2013 | yr_built == 2014) %>%
ggplot(aes(x = factor(zipcode), y = price/1000)) +
facet_grid(grade~yr_built) +
boxplot()
df_b <- df %>%
filter(zipcode %in% df_a$zipcode) %>%
filter(grade == 8 | grade == 9) %>%
filter(yr_built == 2013 | yr_built == 2014) %>%
ggplot(aes(x = factor(zipcode), y = price/1000)) +
boxplot() +
facet_grid(grade~yr_built)
df_b <- df %>%
filter(zipcode %in% df_a$zipcode) %>%
filter(grade == 8 | grade == 9) %>%
filter(yr_built == 2013 | yr_built == 2014) %>%
ggplot(aes(x = factor(zipcode), y = price/1000)) +
facet_grid(grade~yr_built) +
geom_boxplot()
df_b
df_b <- df %>%
filter(zipcode %in% df_a$zipcode) %>%
filter(grade == 8 | grade == 9) %>%
filter(yr_built == 2013 | yr_built == 2014) %>%
ggplot(aes(x = factor(zipcode), y = price/1000)) +
facet_grid(grade~yr_built) +
geom_boxplot() +
labs(title = "Distribution of property prices for zip codes in 2013−2014
for properties with grade of 8 or 9.",
subtitle = "We consider the 5% most numerous zip codes.
",
x = "Zipcode",
y = "Price [1k $]")
df_b
df_b <- df %>%
filter(zipcode %in% df_a$zipcode) %>%
filter(grade == 8 | grade == 9) %>%
filter(yr_built == 2013 | yr_built == 2014) %>%
ggplot(aes(x = factor(zipcode), y = price/1000)) +
facet_grid(grade~yr_built) +
geom_boxplot() +
labs(title = "Distribution of property prices for zip codes in 2013−2014
for properties with grade of 8 or 9.",
subtitle = "We consider the 5% most numerous zip codes.
",
x = "Zipcode",
y = "Price [1k $]") +
theme(strip.text = element_text(colour = "white"),
strip.background = element_rect(colour = "navyblue"))
df_b
df_b <- df %>%
filter(zipcode %in% df_a$zipcode) %>%
filter(grade == 8 | grade == 9) %>%
filter(yr_built == 2013 | yr_built == 2014) %>%
ggplot(aes(x = factor(zipcode), y = price/1000)) +
facet_grid(grade~yr_built) +
geom_boxplot() +
labs(title = "Distribution of property prices for zip codes in 2013−2014
for properties with grade of 8 or 9.",
subtitle = "We consider the 5% most numerous zip codes.
",
x = "Zipcode",
y = "Price [1k $]") +
theme(strip.text = element_text(colour = "white"),
strip.background = element_rect(fill = "navyblue"))
df_b
install.packages("patchwork")
install.packages("grid")
install.packages("grid")
install.packages("patchwork")
install.packages("grid")
install.packages("grid")
install.packages("gridExtra")
library(patchwork)
p1 <- df %>%
ggplot(aes(x = price/1000, y = size, color = factor(waterfront))) +
geom_boxplot() +
scale_color_manual(values = c("darkred", "navyblue")) +
labs(x = "Price [$1k]", y = "Living area [sqft]", color = "Waterfont") +
theme(legend.position = "top")
p2 <- df %>%
filter(zipcode %in% df_a$zipcode) %>%
filter(grade == 8 | grade == 9) %>%
filter(yr_built == 2013 | yr_built == 2014) %>%
ggplot(aes(x = factor(zipcode), y = price/1000)) +
facet_grid(grade~yr_built) +
geom_boxplot() +
labs(title = "Distribution of property prices for zip codes in 2013−2014
for properties with grade of 8 or 9.",
subtitle = "We consider the 5% most numerous zip codes.
",
x = "Zipcode",
y = "Price [1k $]") +
theme(strip.text = element_text(colour = "white"),
strip.background = element_rect(fill = "navyblue"))
p2
p1 + p2
p1/p2
p1 + grid::textGrob("tekst")
p2 <- df_b %>%
ggplot(aes(x = factor(zipcode), y = price/1000)) +
facet_grid(grade~yr_built) +
geom_boxplot() +
labs(title = "Distribution of property prices for zip codes in 2013−2014
for properties with grade of 8 or 9.",
subtitle = "We consider the 5% most numerous zip codes.
",
x = "Zipcode",
y = "Price [1k $]") +
theme(strip.text = element_text(colour = "white"),
strip.background = element_rect(fill = "navyblue"))
df_b <- df %>%
filter(zipcode %in% df_a$zipcode) %>%
filter(grade == 8 | grade == 9) %>%
filter(yr_built == 2013 | yr_built == 2014)
p2 <- df_b %>%
ggplot(aes(x = factor(zipcode), y = price/1000)) +
facet_grid(grade~yr_built) +
geom_boxplot() +
labs(title = "Distribution of property prices for zip codes in 2013−2014
for properties with grade of 8 or 9.",
subtitle = "We consider the 5% most numerous zip codes.
",
x = "Zipcode",
y = "Price [1k $]") +
theme(strip.text = element_text(colour = "white"),
strip.background = element_rect(fill = "navyblue"))
p2
df_b %>%
group_by(year,zipcode) %>%
summarise( n = n())
df_b %>%
group_by(yr_built,zipcode) %>%
summarise( n = n())
source("C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab06/lab06.R", echo=TRUE)
library(tidyr)
df_b %>%
group_by(yr_built,zipcode) %>%
summarise( n = n()) %>%
pivot_wider(names_from = zipcode, names_from = yr_built)
df_b %>%
group_by(yr_built,zipcode) %>%
summarise( n = n()) %>%
pivot_wider(values_from = ilosc, names_from = yr_built)
df_b %>%
group_by(yr_built,zipcode) %>%
summarise( n = n()) %>%
pivot_wider(values_from = n, names_from = yr_built)
p3 <- df_b %>%
group_by(yr_built,zipcode) %>%
summarise( n = n()) %>%
pivot_wider(values_from = n, names_from = yr_built)
p2 + gridExtra::tableGrob(p3[, c(2,3)])
wrap_elements(gridExtra::tableGrob(p3[, c(2,3)]) + p2)
df_4 <- df %>%
mutate(is_renovated = yr_renovated > 0)
df_4
p4 <- df_4 %>%
ggplot(aes(x = floors, y = sqft_living)) +
facet_wrap(~is_renovated) +
geom_violin()
p4
p4 <- df_4 %>%
ggplot(aes(x = factor(floors), y = sqft_living)) +
facet_wrap(~is_renovated) +
geom_violin()
p4
p4 <- df_4 %>%
ggplot(aes(x = factor(floors), y = sqft_living)) +
facet_wrap(~is_renovated) +
geom_violin() +
theme_bw
p4
p4 <- df_4 %>%
ggplot(aes(x = factor(floors), y = sqft_living)) +
facet_wrap(~is_renovated) +
geom_violin() +
theme_bw()
p4
(p1/p3) + patchwork::plot_layout(heights = c(3,1))
(p1/p4) + patchwork::plot_layout(heights = c(3,1))
?SmarterPoland
?`SmarterPoland-package`
shiny::runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
library(ggplot2)
ggplot(aes(x = faithful$waiting)) + geom_histogram(bins = input$bins)
ggplot(data = faithful, aes(x = waiting)) + geom_histogram(bins = input$bins)
output$distPlot({
x    <- faithful[, 2]
ggplot(data = faithful, aes(x = waiting)) + geom_histogram(bins = input$bins)
})
# Define server logic required to draw a histogram
server <- function(input, output) {
# output$distPlot <- renderPlot({
#     # generate bins based on input$bins from ui.R
#     x    <- faithful[, 2]
#     bins <- seq(min(x), max(x), length.out = input$bins + 1)
#
#     # draw the histogram with the specified number of bins
#     hist(x, breaks = bins, col = 'darkgray', border = 'white',
#          xlab = 'Waiting time to next eruption (in mins)',
#          main = 'Histogram of waiting times')
# })
output$distPlot({
x    <- faithful[, 2]
ggplot(data = faithful, aes(x = waiting)) + geom_histogram(bins = input$bins)
})
}
# Run the application
shinyApp(ui = ui, server = server)
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
install.packages("PogromcyDanych")
library(PogromcyDanych)
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
head(serialeIMDB)
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
serialeIMDB
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
?geom_smooth
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/app')
?selectInput
install.packages("readxl")
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    https://shiny.posit.co/
#
?install.packages()
shiny::runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/dataVisualization')
populacja <- read_xlsx("dane/Liczba osób w wieku 0-24 lata w Polsce, 2014-2023.xlsx")
setwd("C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/homeworks/hw4/PolkowskiCezary")
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/dataVisualization')
runApp('C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/labs/lab09/dataVisualization')
setwd("C:/Users/czare/Desktop/studia/DVT/2024Z-DataVisualizationTechniques/homeworks/hw4/PolkowskiCezary")
populacja <- read_xlsx("dane/Liczba osób w wieku 0-24 lata w Polsce, 2014-2023.xlsx")
View(populacja)
wychowankowie <- read_xlsx("dane/Wychowankowie (0-24 lata) w pieczy zastępczej 2014-2023.xlsx")
urodzenia <- read_xlsx("dane/Urodzenia żywe w Polsce 2007-2023.xlsx")
pozostawione <- read_xlsx("dane/Noworodki pozostawione w szpitalu 2007-2023.xlsx")
View(pozostawione)
pozostawione <- pozostawione[8:24]
pozostawione <- pozostawione[8:24,]
View(pozostawione)
colnames(pozostawione) <- c("wojewodztwo", seq(2007,2023,1))
colnames(pozostawione) <- c("Województwo", seq(2007,2023,1))
colnames(wychowankowie)[1] <- c("Województwo")
data <- pozostawione/urodzenia
data[colnames(pozostawione)[2:]] <- pozostawione[2:]/urodzenia[2:]
data[2:] <- pozostawione[2:]/urodzenia[2:]
data2 <- pozostawione[2:]/urodzenia[2:]
data2 <- pozostawione[-1]/urodzenia[-1]
pozostawione <- read_xlsx("dane/Noworodki pozostawione w szpitalu 2007-2023.xlsx")
pozostawione <- pozostawione[8:24,]
colnames(pozostawione) <- c("Województwo", seq(2007,2023,1))
colnames(wychowankowie) <- c("Województwo")
pozostawione[-1] <- as.numeric(pozostawione[-1])
pozostawione <- read_xlsx("dane/Noworodki pozostawione w szpitalu 2007-2023.xlsx")
data2 <- pozostawione[-1]/urodzenia[-1]
data[-1] <- pozostawione[-1]/urodzenia[-1]
data <- cbind(pozostawione$Województwo, pozostawione[-1]/urodzenia[-1])
data <- cbind("Województwo" = pozostawione$Województwo , pozostawione[-1]/urodzenia[-1])
data <- cbind("Województwo" = pozostawione$Województwo ,round(pozostawione[-1]/urodzenia[-1]*1000,2))
poz <- cbind("Województwo" = pozostawione$Województwo ,round(pozostawione[-1]/urodzenia[-1]*1000,2))
poz_now <- cbind("Województwo" = pozostawione$Województwo ,round(pozostawione[-1]/urodzenia[-1]*1000,2))
pie_zas <- cbind("Województwo" = populacja$Województwo ,round(wychowankowie[-1]/populacja[-1]*1000,2))
library(shiny)
library(dplyr)
library(readxl)
populacja <- read_xlsx("dane/Liczba osób w wieku 0-24 lata w Polsce, 2014-2023.xlsx")
wychowankowie <- read_xlsx("dane/Wychowankowie (0-24 lata) w pieczy zastępczej 2014-2023.xlsx")
urodzenia <- read_xlsx("dane/Urodzenia żywe w Polsce 2007-2023.xlsx")
pozostawione <- read_xlsx("dane/Noworodki pozostawione w szpitalu 2007-2023.xlsx")
poz_now <- cbind("Województwo" = pozostawione$Województwo ,round(pozostawione[-1]/urodzenia[-1]*1000,2))
pie_zas <- cbind("Województwo" = populacja$Województwo ,round(wychowankowie[-1]/populacja[-1]*1000,2))
server <- function(input, output) {
output$distPlot <- renderPlot({
data <- NA
if(input$dataset == "Pozostawione noworodki"){
data <- pozostawione/urodzenia
}
x    <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)
hist(x, breaks = bins, col = 'darkgray', border = 'white',
xlab = 'Waiting time to next eruption (in mins)',
main = 'Histogram of waiting times')
})
}
library(ggplot2)
View(pozostawione)
library(tidyr)
data <- poz_now %>%
filter(Województwo == input$Województwo) %>%
select(-Województwo) %>%
pivot_longer(names_to = "rok", values_to = "val")
data <- poz_now %>%
filter(Województwo == "Polska") %>%
select(-Województwo) %>%
pivot_longer(names_to = "rok", values_to = "val")
data <- poz_now %>%
filter(Województwo == "Polska") %>%
pivot_longer(cols = !Województwo, names_to = "rok", values_to = "val")
data <- poz_now %>%
filter(Województwo == "Polska") %>%
pivot_longer(!Województwo, names_to = "rok", values_to = "val")
data <- poz_now %>%
filter(Województwo == "Polska") %>%
select(-Województwo) %>%
pivot_longer(cols = !Województwo, names_to = "rok", values_to = "val")
data <- poz_now %>%
filter(Województwo == "Polska") %>%
select(-Województwo) %>%
pivot_longer(cols = all, names_to = "rok", values_to = "val")
data <- poz_now %>%
filter(Województwo == "Polska") %>%
select(-Województwo) %>%
pivot_longer(cols = starts_with(""), names_to = "rok", values_to = "val")
data <- poz_now %>%
filter(Województwo == "Polska") %>%
select(-Województwo) %>%
pivot_longer(cols = starts_with("2"), names_to = "rok", values_to = "val")
data <- poz_now %>%
filter(Województwo == "Polska") %>%
select(-Województwo) %>%
pivot_longer(cols = everything(), names_to = "rok", values_to = "val")
data <- pie_zas %>%
filter(Województwo == input$Województwo) %>%
select(-Województwo) %>%
pivot_longer(cols = everything(), names_to = "rok", values_to = "val")
data <- poz_now %>%
filter(Województwo == input$Województwo) %>%
select(-Województwo) %>%
pivot_longer(cols = everything(), names_to = "rok", values_to = "val")
runApp()
runApp()
ui <- fluidPage(
titlePanel("Wizualizacja danych do #BI_NGO"),
sidebarLayout(
sidebarPanel(
selectInput("dataset",
"Wybierz dane do wizualizacji",
c("Pozostawione noworodki",
"Piecza zastępcza"),
selected = "Pozostawione noworodki"
),
selectInput("województwo",
"Wybierz region",
values(populacja$Województwo),
selected = "Polska")
),
mainPanel(
plotOutput("distPlot")
)
)
)
runApp()
names(populacja$Województwo)
names(populacja)
populacja$Województwo
runApp()
View(pie_zas)
View(populacja)
View(poz_now)
pie_zas$Województwo[17] <- "Polska"
View(pie_zas)
View(pie_zas)
runApp()
runApp()
runApp()
a <- input$Województwo
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
