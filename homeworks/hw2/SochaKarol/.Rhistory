library(ggplot2)
library(maps)
install.packages("maps")
source("~/R_scripts/TWD_projects/2024Z-DataVisualizationTechniques/labs/lab05/lab05.R", echo=TRUE)
install.packages("maps")
install.packages("maps")
install.packages("mapdata")
library(ggplot2)
library(maps)
library(mapdata)
library(dplyr)
usa <- map_data("usa")
dim(usa)
head(usa)
w1 <- map_data("world")
# Wysokiej rozdzielczości mapa świata.
w2hr <- map_data("world2Hires")
dim(w2hr)
us <- ggplot() +
geom_polygon(data = usa, aes(x = long, y = lat, group = group))
us
world <- ggplot() +
geom_polygon(data = w1, aes(x = long, y = lat, group = group))
world
## coord_fixed()
# Naprawia relację między jedną jednostką w kierunku y i jedną jednostką w kierunku x.
# Nawet jeśli zmienisz zewnętrzne wymiary wykresu (np. zmieniając rozmiar okna lub rozmiar pliku pdf, do którego ją zapisujesz (na przykład w ggsave)), proporcje pozostają niezmienione.
# Przy ustaleniu parametów 1.3 daje dobre rezultaty, bliżej biegunów mogą być potrzebne inne wartości.
us + coord_fixed()
us + coord_fixed(1.3)
## coord_map()
# Zastąpiona przez nową funkcję, ale starsza jest prostsza w obsłudze.
?coord_map
?coord_sf
us + coord_map()
us + coord_map("mercator")
us + coord_map("mollweide")
# stożkowe
us + coord_map("albers", lat0 = 25, lat1=50)
us + coord_map("lambert", lat0 = 25, lat1=50)
us + coord_map("conic", lat0 = 40)
us + coord_map("azequidistant")
# nie działa zbyt dobrze :(
world + coord_map("mollweide")
range(w1$long) # błąd spowodowany długościami geograficznymi spoza spodziewanego zakresu (Alaska, Rosja)
w1_prim <- map_data("world") %>% filter(long <= 180)
ggplot() +
geom_polygon(data = w1_prim, aes(x = long, y = lat, group = group)) +
coord_map("mollweide")
ggplot() +
geom_polygon(data = usa, aes(x=long, y = lat, group = group), fill = NA, color = "red") +
coord_map()
us_fill <- ggplot() +
geom_polygon(data = usa, aes(x=long, y = lat, group = group), fill = "violet", color = "blue") +
coord_map()
us_fill
points <- data.frame(
long = c(-122.064873, -122.306417),
lat = c(36.951968, 47.644855),
names = c("A", "B"),
stringsAsFactors = FALSE
)
us_fill +
geom_point(data = points, aes(x = long, y = lat), color = "black", size = 5) +
geom_point(data = points, aes(x = long, y = lat), color = "yellow", size = 4)
us_fill +
geom_point(data = points, aes(x = long, y = lat), color = "black", size = 5) +
geom_text(data = points, aes(x = long, y = lat, label = names), color = "yellow")
ggplot() +
geom_polygon(data = usa, aes(x = long, y = lat), fill = "violet", color = "blue") +
geom_point(data = points, aes(x = long, y = lat), color = "black", size = 5) +
geom_point(data = points, aes(x = long, y = lat), color = "yellow", size = 4) +
coord_map()
states <- map_data("state")
dim(states)
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, fill = region, group = group), color = "white") +
coord_map("albers", 25, 50) +
theme(legend.position = "None")
head(states)
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, fill = region, group = group), color = "white") +
coord_map("albers", 25, 50) +
theme(legend.position = "None")
source("~/R_scripts/TWD_projects/2024Z-DataVisualizationTechniques/labs/lab05/lab05.R", echo=TRUE)
df <- states %>%
filter(region == c("california", "oregon", "washington"))
ggplot(data = df) +
geom_polygon(aes(x = long, y = lat, fill = "steelblue", group = group), color = "white") +
coord_map("albers", 25, 50) +
theme(legend.position = "None")
ggplot(data = df) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white", fill = "steelblue") +
coord_map("albers", 25, 50) +
theme(legend.position = "None")
df <- states %>%
filter(region == c("california", "oregon", "washington"))
ggplot(data = df) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white", fill = "steelblue") +
coord_map("albers", 25, 50) +
theme(legend.position = "None")
ggplot(data = df) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white") +
coord_map("albers", 25, 50) +
theme(legend.position = "None")
ggplot(data = df) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white", fill_alpha(4)) +
coord_map("albers", 25, 50) +
theme(legend.position = "None")
ggplot(data = df) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white", fill = "blue") +
coord_map("albers", 25, 50) +
theme(legend.position = "None")
ggplot(data = df) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white", fill = "navy") +
coord_map("albers", 25, 50) +
theme(legend.position = "None")
df
dim(df)
df <- states %>%
filter(region %in% c("california", "oregon", "washington"))
df
ggplot(data = df) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white", fill = "navy") +
coord_map("albers", 25, 50) +
theme(legend.position = "None")
dim(df)
df <- states %>%
filter(region %in% c("california", "oregon", "washington"))
ggplot(data = df) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white", fill = "navy") +
coord_map("albers", 25, 50) +
theme(legend.position = "None")
dim(df)
ca_df <- subset(states, region == "california")
head(ca_df)
counties <- map_data("county")
ca_county <- subset(counties, region == "california")
ca_base <- ggplot(data = ca_df, mapping = aes(x = long, y = lat, group = group)) +
coord_map("albers", 25, 50) +
geom_polygon(color = "black", fill = "gray")
ca_base + theme_minimal()
ca_base + theme_minimal() +
geom_polygon(data = ca_county, fill = NA, color = "white") +
geom_polygon(color = "black", fill = NA)
# Dodatkowe źródło danych
# Ramka danych na podstawie infomracji z Wikipedii
pop_and_area <- read.csv("pop_and_area.csv")
# Dodatkowe źródło danych
# Ramka danych na podstawie infomracji z Wikipedii
pop_and_area <- read.csv("C:\Users\kerel\OneDrive\Dokumenty\R_scripts\TWD_projects\2024Z-DataVisualizationTechniques\labs\lab05\pop_and_area.csv")
# Dodatkowe źródło danych
# Ramka danych na podstawie infomracji z Wikipedii
pop_and_area <- read.csv("C:/Users/kerel/OneDrive/Dokumenty/R_scripts/TWD_projects/2024Z-DataVisualizationTechniques/labs/lab05/pop_and_area.csv")
ca <- ca_county %>% left_join(pop_and_area, by = c("subregion" = "Country"))
ca$people_per_sq_mile <- ca$Population/ca$Area.sq.mi
pop_and_area
head(pop_and_area)
head(ca)
ca_base + theme_minimal() +
geom_polygon(data = ca_county, fill = NA, color = "white") +
geom_polygon(color = "black", fill = NA)
ca_base + theme_minimal() +
geom_polygon(data = ca, fill = as.factor(people_per_sq_mile), color = "white") +
geom_polygon(color = "black", fill = NA)
ggplot(data = ca_df, mapping = aes(x = long, y = lat, group = group)) +
coord_map("albers", 25, 50) +
geom_polygon(color = "black", fill = "gray")
ca_base + theme_minimal() +
geom_polygon(data = ca, fill = NA, color = "white") +
geom_polygon(color = "black", fill = NA)
ca_base + theme_minimal() +
geom_polygon(data = ca_base, fill = as.factor(ca$people_per_sq_mile), color = "white") +
geom_polygon(color = "black", fill = NA)
head(ca)
ca_1 <- ggplot(data = ca, mapping = aes(x = long, y = lat, group = group)) +
coord_map("albers", 25, 50) +
geom_polygon(color = "black", fill = "gray")
ca_1 <- ggplot(data = ca, mapping = aes(x = long, y = lat, group = group)) +
coord_map("albers", 25, 50) +
geom_polygon(color = "black", fill = "gray")
ca_1 <- ggplot(data = ca, mapping = aes(x = long, y = lat, group = group)) +
coord_map("albers", 25, 50) +
geom_polygon(color = "black", fill = "gray")
ca_1 + theme_minimal() +
geom_polygon(data = ca_county, fill = NA, color = "white") +
geom_polygon(color = "black", fill = NA)
ca_1 + theme_minimal() +
geom_polygon(data = ca_county, fill = as.factor(people_per_sq_mile), color = "white") +
geom_polygon(color = "black", fill = NA)
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = as.factor(people_per_sq_mile), color = "white") +
geom_polygon(color = "black", fill = NA)
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = factor(people_per_sq_mile), color = "white") +
geom_polygon(color = "black", fill = NA)
head(ca)
# Dodatkowe źródło danych
# Ramka danych na podstawie infomracji z Wikipedii
pop_and_area <- read.csv("C:/Users/kerel/OneDrive/Dokumenty/R_scripts/TWD_projects/2024Z-DataVisualizationTechniques/labs/lab05/pop_and_area.csv")
head(pop_and_area)
ca <- ca_county %>% left_join(pop_and_area, by = c("subregion" = "Country"))
ca$people_per_sq_mile <- ca$Population/ca$Area.sq.mi
head(ca)
ca_1 <- ggplot(data = ca, mapping = aes(x = long, y = lat, group = group)) +
coord_map("albers", 25, 50) +
geom_polygon(color = "black", fill = "gray")
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = factor(people_per_sq_mile), color = "white") +
geom_polygon(color = "black", fill = NA)
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = "navy", color = "white") +
geom_polygon(color = "black", fill = NA)
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = people_per_sq_mile, color = "white") +
geom_polygon(color = "black", fill = NA)
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = ca$people_per_sq_mile, color = "white") +
geom_polygon(color = "black", fill = NA)
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = ca$people_per_sq_mile, color = "white") +
scale_color_gradient(low="yellow", high="darkred") +
geom_polygon(color = "black", fill = NA)
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = ca$people_per_sq_mile, color = "white") +
scale_fill_gradient(low="yellow", high="darkred") +
geom_polygon(color = "black", fill = NA)
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = ca$people_per_sq_mile, color = "white") +
scale_fill_gradient2(low="yellow", high="darkred") +
geom_polygon(color = "black", fill = NA)
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = factor(ca$people_per_sq_mile), color = "white") +
scale_fill_gradient2(low="yellow", high="darkred") +
geom_polygon(color = "black", fill = NA)
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = as.factor(ca$people_per_sq_mile), color = "white") +
scale_fill_gradient2(low="yellow", high="darkred") +
geom_polygon(color = "black", fill = NA)
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = ca$people_per_sq_mile, color = "white") +
geom_polygon(color = "black", fill = NA)
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = scale_color_gradient(ca$people_per_sq_mile), color = "white") +
geom_polygon(color = "black", fill = NA)
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = ca$people_per_sq_mile, color = "white") +
geom_polygon(color = "black", fill = NA)
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = ca$people_per_sq_mile, color = "white") +
scale_fill_gradient(low = "yellow", high = "darkred")
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = ca$people_per_sq_mile, color = "white") +
scale_fill_gradient2(low = "yellow", high = "darkred")
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = ca$people_per_sq_mile, color = "white") +
scale_fill_virdis(low = "yellow", high = "darkred")
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = ca$people_per_sq_mile, color = "white") +
scale_fill_virdis_c(low = "yellow", high = "darkred")
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = log10(people_per_sq_mile), color = "white") +
scale_fill_virdis_c(low = "yellow", high = "darkred")
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = people_per_sq_mile, color = "white") +
scale_fill_virdis_c(low = "yellow", high = "darkred")
ca_1 + theme_minimal() +
geom_polygon(data = ca, fill = ca$people_per_sq_mile, color = "white") +
scale_fill_virdis_c(low = "yellow", high = "darkred")
ca_base + theme_minimal() +
geom_polygon(data = ca, fill = people_per_sq_mile, color = "white")
ca_base +
geom_polygon(data = ca, fill = people_per_sq_mile, color = "white")
head(pop_and_area)
ca <- ca_county %>% left_join(pop_and_area, by = c("subregion" = "Country"))
ca$people_per_sq_mile <- ca$Population/ca$Area.sq.mi
head(ca)
ca_1 <- ggplot(data = ca, mapping = aes(x = long, y = lat, group = group)) +
coord_map("albers", 25, 50) +
geom_polygon(color = "black", fill = "gray")
ca_base +
geom_polygon(data = ca, fill = people_per_sq_mile, color = "white")
head(ca)
ca_base +
geom_polygon(data = ca, aes(fill = people_per_sq_mile), color = "white")
ca_base +
geom_polygon(data = ca, aes(fill = log10(people_per_sq_mile)), color = "white")
ca_base +
geom_polygon(data = ca, aes(fill = log10(people_per_sq_mile)), color = "white") +
scale_fill_fermenter(palette = 8, trans = "log10", direction = 1)
ca_base +
geom_polygon(data = ca, aes(fill = log10(people_per_sq_mile)), color = "white") +
scale_fill_fermenter(palette = 8, trans = "log10", direction = 1)
source("~/R_scripts/TWD_projects/2024Z-DataVisualizationTechniques/labs/lab05/lab05.R", echo=TRUE)
install.packages("mapdata")
source("~/R_scripts/TWD_projects/2024Z-DataVisualizationTechniques/labs/lab05/lab05.R", echo=TRUE)
ca$people_per_sq_km <- ca$people_per_sq_mile * 0.386
ca_base +
geom_polygon(data = ca, aes(fill = log10(people_per_sq_km)), color = "white") +
scale_fill_fermenter(palette = 8, trans = "log10", direction = 1)
ca_density
ca_density <- ca_base +
geom_polygon(data = ca, aes(fill = log10(people_per_sq_km)), color = "white") +
scale_fill_fermenter(palette = 8, trans = "log10", direction = 1) +
theme_void() +
geom_polygon(color = "black", fill = NA) +
labs(title = "",
subtitle= "",
fill = "")
ca_density
# Przycinamy obszar mapy
ca_density + xlim(-123, -121.0) + ylim(36, 38)
ca_density + coord_map(xlim = c(-123, -121.0),  ylim = c(36, 38))
rnorm(5, 0, sqrt(5))
head(w1)
length(distinct(w1$region))
length(unique(w1$region))
rnorm(length(unique(w1$region)), 0, sqrt(5))
head(w1)
w2 <- w1 %>%
select(unique(region))
w2 <- w1 %>%
select(region)
w2
w2 <- w1 %>%
select(region) %>%
distinct()
w2
w2 <- w1 %>%
select(region) %>%
distinct() %>%
left_join(values)
w2
values <- rnorm(length(unique(w1$region)), 0, sqrt(5))
head(w1)
w2 <- w1 %>%
select(region) %>%
distinct() %>%
left_join(values)
values <- as.data.frame(rnorm(length(unique(w1$region)), 0, sqrt(5)))
head(w1)
w2 <- w1 %>%
select(region) %>%
distinct() %>%
left_join(values)
w2
values <- as.data.frame(rnorm(length(unique(w1$region)), 0, sqrt(5)))
head(w1)
w2 <- w1 %>%
select(region) %>%
distinct() %>%
left_join(values)
w2 <- w1 %>%
select(region) %>%
distinct() %>%
mutate(values = values)
w2
w3 <- w1 %>%
left_join(w2)
head(w3)
head(values)
head(values)
colnames(values) <- "values"
head(values)
values <- as.data.frame(rnorm(length(unique(w1$region)), 0, sqrt(5)))
colnames(values) <- "values"
w2 <- w1 %>%
select(region) %>%
distinct() %>%
mutate(values = values)
w3 <- w1 %>%
left_join(w2)
head(w3)
world <- ggplot() +
geom_polygon(data = w1, aes(x = long, y = lat, group = group))
world
ggplot(data = df) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white", fill = "navy") +
coord_map("albers", 25, 50) +
theme(legend.position = "None")
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, fill = region, group = group), color = "white") +
coord_map("albers", 25, 50) +
theme(legend.position = "None")
country %>% filter(long<180) %>%
left_join(index_table) %>%
ggplot(aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = index), color = "black", linewidth = 0.3) +
coord_map("mollweide")
library(leaflet)
leaflet()
# https://rstudio.github.io/leaflet/
install.packages("leaflet")
leaflet()
library(leaflet)
leaflet()
